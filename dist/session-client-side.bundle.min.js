(function(){var Meteor=Package.meteor.Meteor;var global=Package.meteor.global;var meteorEnv=Package.meteor.meteorEnv;var _=Package.underscore._;var Tracker=Package.tracker.Tracker;var Deps=Package.tracker.Deps;var EJSON=Package.ejson.EJSON;var meteorInstall=Package.modules.meteorInstall;var Buffer=Package.modules.Buffer;var process=Package.modules.process;var Symbol=Package["ecmascript-runtime"].Symbol;var Map=Package["ecmascript-runtime"].Map;var Set=Package["ecmascript-runtime"].Set;var meteorBabelHelpers=Package["babel-runtime"].meteorBabelHelpers;var Promise=Package.promise.Promise;var ReactiveDict;var require=meteorInstall({node_modules:{meteor:{"reactive-dict":{"reactive-dict.js":["babel-runtime/helpers/typeof",function(require,exports,module){var _typeof;module.import("babel-runtime/helpers/typeof",{default:function(v){_typeof=v}});var stringify=function stringify(value){if(value===undefined)return"undefined";return EJSON.stringify(value)};var parse=function parse(serialized){if(serialized===undefined||serialized==="undefined")return undefined;return EJSON.parse(serialized)};var changed=function changed(v){v&&v.changed()};ReactiveDict=function(_ReactiveDict){function ReactiveDict(_x){return _ReactiveDict.apply(this,arguments)}ReactiveDict.toString=function(){return _ReactiveDict.toString()};return ReactiveDict}(function(dictName){if(dictName){if(typeof dictName==="string"){ReactiveDict._registerDictForMigrate(dictName,this);this.keys=ReactiveDict._loadMigratedDict(dictName)||{};this.name=dictName}else if((typeof dictName==="undefined"?"undefined":_typeof(dictName))==="object"){this.keys=dictName}else{throw new Error("Invalid ReactiveDict argument: "+dictName)}}else{this.keys={}}this.allDeps=new Tracker.Dependency;this.keyDeps={};this.keyValueDeps={}});_.extend(ReactiveDict.prototype,{set:function(){function set(keyOrObject,value){var self=this;if((typeof keyOrObject==="undefined"?"undefined":_typeof(keyOrObject))==="object"&&value===undefined){self._setObject(keyOrObject);return}var key=keyOrObject;value=stringify(value);var keyExisted=_.has(self.keys,key);var oldSerializedValue=keyExisted?self.keys[key]:"undefined";var isNewValue=value!==oldSerializedValue;self.keys[key]=value;if(isNewValue||!keyExisted){self.allDeps.changed()}if(isNewValue){changed(self.keyDeps[key]);if(self.keyValueDeps[key]){changed(self.keyValueDeps[key][oldSerializedValue]);changed(self.keyValueDeps[key][value])}}}return set}(),setDefault:function(){function setDefault(keyOrObject,value){var self=this;if((typeof keyOrObject==="undefined"?"undefined":_typeof(keyOrObject))==="object"&&value===undefined){self._setDefaultObject(keyOrObject);return}var key=keyOrObject;if(!_.has(self.keys,key)){self.set(key,value)}}return setDefault}(),get:function(){function get(key){var self=this;self._ensureKey(key);self.keyDeps[key].depend();return parse(self.keys[key])}return get}(),equals:function(){function equals(key,value){var self=this;var ObjectID=null;if(Package.mongo){ObjectID=Package.mongo.Mongo.ObjectID}if(typeof value!=="string"&&typeof value!=="number"&&typeof value!=="boolean"&&typeof value!=="undefined"&&!(value instanceof Date)&&!(ObjectID&&value instanceof ObjectID)&&value!==null){throw new Error("ReactiveDict.equals: value must be scalar")}var serializedValue=stringify(value);if(Tracker.active){self._ensureKey(key);if(!_.has(self.keyValueDeps[key],serializedValue))self.keyValueDeps[key][serializedValue]=new Tracker.Dependency;var isNew=self.keyValueDeps[key][serializedValue].depend();if(isNew){Tracker.onInvalidate(function(){if(!self.keyValueDeps[key][serializedValue].hasDependents())delete self.keyValueDeps[key][serializedValue]})}}var oldValue=undefined;if(_.has(self.keys,key))oldValue=parse(self.keys[key]);return EJSON.equals(oldValue,value)}return equals}(),all:function(){function all(){this.allDeps.depend();var ret={};_.each(this.keys,function(value,key){ret[key]=parse(value)});return ret}return all}(),clear:function(){function clear(){var self=this;var oldKeys=self.keys;self.keys={};self.allDeps.changed();_.each(oldKeys,function(value,key){changed(self.keyDeps[key]);if(self.keyValueDeps[key]){changed(self.keyValueDeps[key][value]);changed(self.keyValueDeps[key]["undefined"])}})}return clear}(),delete:function(){function _delete(key){var self=this;var didRemove=false;if(_.has(self.keys,key)){var oldValue=self.keys[key];delete self.keys[key];changed(self.keyDeps[key]);if(self.keyValueDeps[key]){changed(self.keyValueDeps[key][oldValue]);changed(self.keyValueDeps[key]["undefined"])}self.allDeps.changed();didRemove=true}return didRemove}return _delete}(),_setObject:function(){function _setObject(object){var self=this;_.each(object,function(value,key){self.set(key,value)})}return _setObject}(),_setDefaultObject:function(){function _setDefaultObject(object){var self=this;_.each(object,function(value,key){self.setDefault(key,value)})}return _setDefaultObject}(),_ensureKey:function(){function _ensureKey(key){var self=this;if(!(key in self.keyDeps)){self.keyDeps[key]=new Tracker.Dependency;self.keyValueDeps[key]={}}}return _ensureKey}(),_getMigrationData:function(){function _getMigrationData(){return this.keys}return _getMigrationData}()})}],"migration.js":function(){ReactiveDict._migratedDictData={};ReactiveDict._dictsToMigrate={};ReactiveDict._loadMigratedDict=function(dictName){if(_.has(ReactiveDict._migratedDictData,dictName))return ReactiveDict._migratedDictData[dictName];return null};ReactiveDict._registerDictForMigrate=function(dictName,dict){if(_.has(ReactiveDict._dictsToMigrate,dictName))throw new Error("Duplicate ReactiveDict name: "+dictName);ReactiveDict._dictsToMigrate[dictName]=dict};if(Meteor.isClient&&Package.reload){var migrationData=Package.reload.Reload._migrationData("reactive-dict");if(migrationData&&migrationData.dicts)ReactiveDict._migratedDictData=migrationData.dicts;Package.reload.Reload._onMigrate("reactive-dict",function(){var dictsToMigrate=ReactiveDict._dictsToMigrate;var dataToMigrate={};for(var dictName in meteorBabelHelpers.sanitizeForInObject(dictsToMigrate)){dataToMigrate[dictName]=dictsToMigrate[dictName]._getMigrationData()}return[true,{dicts:dataToMigrate}]})}}}}}},{extensions:[".js",".json"]});require("./node_modules/meteor/reactive-dict/reactive-dict.js");require("./node_modules/meteor/reactive-dict/migration.js");if(typeof Package==="undefined")Package={};(function(pkg,symbols){for(var s in symbols)s in pkg||(pkg[s]=symbols[s])})(Package["reactive-dict"]={},{ReactiveDict:ReactiveDict})})();(function(){var Meteor=Package.meteor.Meteor;var global=Package.meteor.global;var meteorEnv=Package.meteor.meteorEnv;var _=Package.underscore._;var ReactiveDict=Package["reactive-dict"].ReactiveDict;var EJSON=Package.ejson.EJSON;var Session;(function(){Session=new ReactiveDict("session")}).call(this);if(typeof Package==="undefined")Package={};(function(pkg,symbols){for(var s in symbols)s in pkg||(pkg[s]=symbols[s])})(Package.session={},{Session:Session})})();Session=Package.session.Session;